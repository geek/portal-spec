swagger: '2.0'
host: 'localhost:8000'
basePath: /
schemes:
  - http
info:
  title: Portal API Documentation
  version: 1.0.0
tags: []
paths:
  /deployment:
    post:
      summary: Create new deployment group
      operationId: postDeployment
      parameters:
        - in: body
          name: body
          schema:
            type: object
            $ref: '#/definitions/Model 1'
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 2'
            type: object
          description: Successful
        '201':
          schema:
            $ref: '#/definitions/Model 2'
            type: object
          description: Deployment group created
  '/deployment/{deploymentId}/manifest':
    post:
      summary: Create a new manifest revision for a deployment group
      operationId: postDeploymentDeploymentidManifest
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: object
            $ref: '#/definitions/Model 3'
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 4'
            type: object
          description: Successful
        '201':
          schema:
            $ref: '#/definitions/Model 4'
            type: object
          description: Manifest revision created
  /datacenters:
    get:
      summary: Retrieve a list of available datacenters
      operationId: getDatacenters
      tags:
        - datacenters
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 6'
            type: array
          description: Successful
  /deployments:
    get:
      summary: Retrieve a list of deployment groups
      operationId: getDeployments
      tags:
        - deployments
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 7'
            type: array
          description: Successful
  '/deployment/{deploymentId}':
    get:
      summary: Retrieve a deployment group
      operationId: getDeploymentDeploymentid
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 2'
            type: object
          description: Successful
    put:
      summary: Update a deployment group
      operationId: putDeploymentDeploymentid
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: object
            $ref: '#/definitions/Model 15'
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 2'
            type: object
          description: Successful
    delete:
      summary: Delete a deployment group
      operationId: deleteDeploymentDeploymentid
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/deployment/{deploymentId}/state':
    get:
      summary: Retrieve the current state of the deployment group
      operationId: getDeploymentDeploymentidState
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 8'
            type: object
          description: Successful
    put:
      summary: Perform an action on the deployment group state
      operationId: putDeploymentDeploymentidState
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: object
            $ref: '#/definitions/Model 16'
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 8'
            type: object
          description: Successful
  '/deployment/{deploymentId}/services':
    get:
      summary: Retrieve the services for a deployment group
      operationId: getDeploymentDeploymentidServices
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 10'
            type: array
          description: Successful
  '/deployment/{deploymentId}/activities':
    get:
      summary: Retrieve the recent activities for the deployment group
      operationId: getDeploymentDeploymentidActivities
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 12'
            type: array
          description: Successful
  '/deployment/{deploymentId}/metrics':
    get:
      summary: Retrieve metrics for the deployment group
      operationId: getDeploymentDeploymentidMetrics
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 14'
            type: array
          description: Successful
  '/deployment/{deploymentId}/manifest/{revision}':
    get:
      summary: Retrieve a manifest revision for a deployment group
      operationId: getDeploymentDeploymentidManifestRevision
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
        - type: number
          description: Revision number of manifest
          name: revision
          in: path
          required: true
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 4'
            type: object
          description: Successful
  '/deployment/{deploymentId}/service/{name}':
    put:
      summary: Perform an action on the named service
      operationId: putDeploymentDeploymentidServiceName
      parameters:
        - type: number
          description: ID of deployment group
          name: deploymentId
          in: path
          required: true
        - type: string
          description: Unique name to identify the service
          name: name
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: object
            $ref: '#/definitions/Model 17'
      tags:
        - deployment
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 9'
            type: object
          description: Successful
definitions:
  Model 1:
    type: object
    properties:
      name:
        type: string
        description: Name of deployment group
      datacenter:
        type: string
        description: Datacenter the deployment group belongs to
    required:
      - name
      - datacenter
  Model 2:
    type: object
    example:
      id: 42
      name: User Services
      datacenter: us-sw-1
    properties:
      name:
        type: string
        description: Name of deployment group
      datacenter:
        type: string
        description: Datacenter the deployment group belongs to
      id:
        type: number
        description: ID of deployment group
    required:
      - name
      - datacenter
      - id
  file:
    type: object
  Model 3:
    type: object
    properties:
      file:
        $ref: '#/definitions/file'
        type: object
    required:
      - file
  Model 4:
    type: object
    example:
      revision: 5
      file:
        consul:
          image: 'autopilotpattern/consul:0.7.2-r0.8'
          restart: always
          dns:
            - 127.0.0.1
          labels:
            - triton.cns.services=consul
          ports:
            - '8500:8500'
          command: |-
            >
                    /usr/local/bin/containerpilot
                    /bin/consul agent -server
                      -config-dir=/etc/consul
                      -log-level=err
                      -bootstrap-expect 1
                      -ui-dir /ui
        prometheus:
          image: 'autopilotpattern/prometheus:1.3.0r1.0'
          mem_limit: 128m
          restart: always
          ports:
            - '9090:9090'
    properties:
      file:
        $ref: '#/definitions/file'
        type: object
      revision:
        type: number
        description: Revision number of manifest
        example: 5
    required:
      - revision
  Model 5:
    type: object
    example:
      name: us-sw-1
      url: 'https://us-sw-1.api.joyentcloud.com'
    properties:
      name:
        type: string
        description: Name of datacenter
      url:
        type: string
        description: URL of datacenter
    required:
      - name
      - url
  Model 6:
    type: array
    example:
      - name: us-sw-1
        url: 'https://us-sw-1.api.joyentcloud.com'
      - name: us-west-1
        url: 'https://us-west-1.api.joyentcloud.com'
    items:
      $ref: '#/definitions/Model 5'
      type: object
  Model 7:
    type: array
    items:
      $ref: '#/definitions/Model 2'
      type: object
  Model 8:
    type: object
    properties:
      current:
        type: string
        description: The current state of the deployment group
        enum:
          - started
          - stopped
    required:
      - current
  Model 9:
    type: object
    example:
      name: consul
      count: 3
    properties:
      name:
        type: string
        description: Unique name to identify the service
      count:
        type: number
        description: Number of instances of the service
        default: 1
    required:
      - name
  Model 10:
    type: array
    example:
      - name: consul
        count: 3
      - name: prometheus
        count: 1
    items:
      $ref: '#/definitions/Model 9'
      type: object
  Model 11:
    type: object
    example:
      date: 1493146372179
      type: start
      meta:
        user: Tom
    properties:
      date:
        type: string
        format: date
        description: Date/time when the activity occurred
      type:
        type: string
        description: The type of activity that occurred
      meta:
        $ref: '#/definitions/file'
        type: object
    required:
      - date
      - type
  Model 12:
    type: array
    example:
      - date: 1493146372179
        type: start
        meta:
          user: Tom
      - date: 1493146372179
        type: stop
        meta:
          user: Dave
    items:
      $ref: '#/definitions/Model 11'
      type: object
  Model 13:
    type: object
    example:
      service: consul
      cpu: 1.2
      memory: 23344523
      network: 5024
    properties:
      service:
        type: string
        description: Unique name to identify the service
      cpu:
        type: number
        description: CPU usage percentage
      memory:
        type: number
        description: Total memory usage in bytes
      network:
        type: number
        description: Total bytes per second transferred by the NIC
    required:
      - service
      - cpu
      - memory
      - network
  Model 14:
    type: array
    example:
      - service: consul
        cpu: 1.2
        memory: 23344523
        network: 5024
      - service: prometheus
        cpu: 24.2
        memory: 514234453
        network: 10024
    items:
      $ref: '#/definitions/Model 13'
      type: object
  Model 15:
    type: object
    properties:
      name:
        type: string
        description: Name of deployment group
      datacenter:
        type: string
        description: Datacenter the deployment group belongs to
  Model 16:
    type: object
    properties:
      action:
        type: string
        description: Action being performed on the deployment group
        enum:
          - start
          - stop
          - restart
    required:
      - action
  Model 17:
    type: object
    properties:
      count:
        type: number
        description: Number of instances of the service
        default: 1
    required:
      - count
